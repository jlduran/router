#!/bin/sh

set -e

# TODO pool management: upgrade after last supported BE is removed

die()
{
	echo "$@" >&2
	exit 1
}

[ $# -eq 1 ] || die "Wrong number of arguments"

BE="$1"
TMP_BE_MOUNT="$(mktmp -d /tmp/post-upgrade.XXXXXX)"

mount_newbe () {
	[ bectl mount "$BE" "$TMP_BE_MOUNT" ] ||
	    die "Can't mount new boot environment"
}

umount_newbe () {
	[ bectl umount "$BE" ] ||
	    die "Can't umount new boot environment"
}

copy_custom_boot_loader_config()
{
	if [ -f /boot/loader.conf.local ]; then
		cp /boot/loader.conf.local $TMP_BE_MOUNT/boot/ ||
		    die "Can't backup /boot/loader.conf.local"
	fi

	if [ ls -A /boot/loader.conf.d/*.conf ]; then
		cp /boot/loader.conf.d/*.conf $TMP_BE_MOUNT/boot/loader.conf.d/ ||
		    die "Can't backup /boot/loader.conf.d/*.conf files"
	fi
}

copy_new_efi()
{
	trap "umount /boot/efi" 1 2 15

	mount /boot/efi
	cp $TMP_BE_MOUNT/boot/loader.efi /boot/efi/EFI/BOOT/BOOTx64.efi
	cp $TMP_BE_MOUNT/boot/loader.efi /boot/efi/EFI/FreeBSD/loader.efi
	umount /boot/efi
}

change_users()
{
	# If the upgrade involves creating/removing users/groups,
	# add them here
	#
	# pw groupadd <newgroup> -g <gid>
	# pw useradd <newuser> -u <uid> -g <gid>  -c "Full Name" \
	#     -d /var/empty -s /usr/sbin/nologin
	# config_save
	:
}

mount_newbe
copy_custom_boot_loader_config
copy_new_efi
change_users
umount_newbe
